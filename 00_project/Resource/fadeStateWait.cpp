//============================================================
//
//	余韻管理状態処理 [fadeStateWait.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "fadeStateWait.h"
#include "fade.h"

//************************************************************
//	子クラス [CFadeStateWait] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CFadeStateWait::CFadeStateWait(const float fWaitTime, CFadeState* pNextState) :
	m_pNextState	(pNextState),	// 遷移先の状態
	m_fWaitTime		(fWaitTime)		// 現在の余韻時間
{

}

//============================================================
//	デストラクタ
//============================================================
CFadeStateWait::~CFadeStateWait()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CFadeStateWait::Init(void)
{
	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CFadeStateWait::Uninit(void)
{
	// 自身の破棄
	delete this;
}

//============================================================
//	更新処理
//============================================================
void CFadeStateWait::Update(const float fDeltaTime)
{
	// 余韻時刻を減らす
	m_fWaitTime -= fDeltaTime;
	if (m_fWaitTime <= 0.0f)
	{ // 余韻終了した場合

		// 余韻時間を初期化
		m_fWaitTime = 0.0f;

		// 予約済みの遷移を設定
		m_pContext->ChangeState(m_pNextState);
	}
}
