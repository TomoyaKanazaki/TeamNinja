//============================================================
//
//	吹き出し処理 [balloon.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "balloon.h"

//************************************************************
//	子クラス [CBalloon] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CBalloon::CBalloon()
{

}

//============================================================
//	デストラクタ
//============================================================
CBalloon::~CBalloon()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CBalloon::Init(void)
{
	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CBalloon::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CBalloon::Update(const float fDeltaTime)
{

}

//============================================================
//	描画処理
//============================================================
void CBalloon::Draw(CShader *pShader)
{

}

//============================================================
//	生成処理
//============================================================
CBalloon *CBalloon::Create(void)
{
	// 吹き出しの生成
	CBalloon *pBalloon = new CBalloon;
	if (pBalloon == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// 吹き出しの初期化
		if (FAILED(pBalloon->Init()))
		{ // 初期化に失敗した場合

			// 吹き出しの破棄
			SAFE_DELETE(pBalloon);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pBalloon;
	}
}
