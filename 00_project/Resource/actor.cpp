//============================================================
//
//	アクター処理 [actor.cpp]
//	Author：小原立暉
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "actor.h"
#include "manager.h"
#include "renderer.h"
#include "model.h"

//************************************************************
//	定数宣言
//************************************************************
namespace
{
	const char* MODEL = "data\\MODEL\\Rock\\Moss-Rock000.x";	// モデルのパス
	const int PRIORITY = 4;	// アクターの優先順位
}

//************************************************************
//	子クラス [CActor] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CActor::CActor() : CObjectModel(CObject::LABEL_ACTOR, CObject::DIM_3D, PRIORITY)
{

}

//============================================================
//	デストラクタ
//============================================================
CActor::~CActor()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CActor::Init(void)
{
	// オブジェクトモデルの初期化
	if (FAILED(CObjectModel::Init()))
	{ // 初期化に失敗した場合

		// 失敗を返す
		assert(false);
		return E_FAIL;
	}

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CActor::Uninit(void)
{
	// オブジェクトモデルの終了
	CObjectModel::Uninit();
}

//============================================================
//	更新処理
//============================================================
void CActor::Update(const float fDeltaTime)
{
	// オブジェクトモデルの更新
	CObjectModel::Update(fDeltaTime);
}

//============================================================
//	描画処理
//============================================================
void CActor::Draw(CShader* pShader)
{
	// オブジェクトモデルの描画
	CObjectModel::Draw(pShader);
}

//============================================================
//	生成処理
//============================================================
CActor* CActor::Create
( // 引数
	const D3DXVECTOR3& rPos,	// 位置
	const D3DXVECTOR3& rRot,	// 向き
	const D3DXVECTOR3& rScale	// 大きさ
)
{
	// モデルUIの生成
	CActor* pActor = new CActor;

	if (pActor == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// アクターの初期化
		if (FAILED(pActor->Init()))
		{ // 初期化に失敗した場合

			// アクターの破棄
			SAFE_DELETE(pActor);
			return nullptr;
		}

		// 位置を設定
		pActor->SetVec3Position(rPos);

		// 向きを設定
		pActor->SetVec3Rotation(rRot);

		// 拡大率を設定
		pActor->SetVec3Scaling(rScale);

		// モデルの割り当て処理
		pActor->BindModel(MODEL);

		// 確保したアドレスを返す
		return pActor;
	}
}
