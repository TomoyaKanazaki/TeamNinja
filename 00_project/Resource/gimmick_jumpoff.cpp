//============================================================
//
// 飛び降り [gimmick_jumpoff.cpp]
// Author：佐藤根詩音
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "gimmick_jumpoff.h"
#include "manager.h"
#include "player.h"

//============================================================
//	コンストラクタ
//============================================================
CGimmickJumpOff::CGimmickJumpOff() : CGimmickAction()
{

}

//============================================================
//	デストラクタ
//============================================================
CGimmickJumpOff::~CGimmickJumpOff()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CGimmickJumpOff::Init(void)
{
	// ギミックアクションの初期化
	if (FAILED(CGimmickAction::Init()))
	{ // 初期化に失敗した場合

		// 失敗を返す
		assert(false);
		return E_FAIL;
	}

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CGimmickJumpOff::Uninit(void)
{
	// ギミックアクションの終了
	CGimmickAction::Uninit();
}

//============================================================
//	更新処理
//============================================================
void CGimmickJumpOff::Update(const float fDeltaTime)
{
	if (GET_PLAYER->IsJump())
	{ // プレイヤーがジャンプしている場合

		// プレイヤーとの当たり判定
		if (CollisionPlayer() && GetMoment() == false)
		{ // ギミック発動してない場合

			// 発動中
			SetMoment(GET_PLAYER->GimmickLand());
		}
	}
	else
	{ // プレイヤーがジャンプしていない場合

		// 発動してない
		SetMoment(false);
	}

	// ギミックアクションの更新
	CGimmickAction::Update(fDeltaTime);
}

//============================================================
//	描画処理
//============================================================
void CGimmickJumpOff::Draw(CShader* pShader)
{
	// ギミックアクションの描画
	CGimmickAction::Draw(pShader);
}