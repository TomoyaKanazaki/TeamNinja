//============================================================
//
//	回転オブジェクト2D処理 [roll2D.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "roll2D.h"

//************************************************************
//	定数宣言
//************************************************************
namespace
{
	const int PRIORITY = 6;	// 回転オブジェクト2D表示の優先順位
}

//************************************************************
//	親クラス [CRoll2D] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CRoll2D::CRoll2D() : CObject2D(CObject::LABEL_UI, CObject::SCENE_MAIN, CObject::DIM_2D, PRIORITY),
	m_fAddRot	(0.0f),	// 向きの加算量
	m_bRoll		(false)	// 回転状況
{

}

//============================================================
//	デストラクタ
//============================================================
CRoll2D::~CRoll2D()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CRoll2D::Init(void)
{
	// メンバ変数を初期化
	m_fAddRot	= 0.0f;		// 向きの加算量
	m_bRoll		= false;	// 回転状況

	// オブジェクト2Dの初期化
	if (FAILED(CObject2D::Init()))
	{ // 初期化に失敗した場合

		// 失敗を返す
		assert(false);
		return E_FAIL;
	}

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CRoll2D::Uninit(void)
{
	// オブジェクト2Dの終了
	CObject2D::Uninit();
}

//============================================================
//	更新処理
//============================================================
void CRoll2D::Update(const float fDeltaTime)
{
	// 回転中ではない場合抜ける
	if (!m_bRoll) { return; }

	// 回転加算量を計算
	D3DXVECTOR3 add = D3DXVECTOR3(0.0f, 0.0f, m_fAddRot * fDeltaTime);

	// 回転を反映
	SetVec3Rotation(GetVec3Rotation() + add);

	// オブジェクト2Dの更新
	CObject2D::Update(fDeltaTime);
}

//============================================================
//	描画処理
//============================================================
void CRoll2D::Draw(CShader *pShader)
{
	// オブジェクト2Dの描画
	CObject2D::Draw(pShader);
}

//============================================================
//	生成処理
//============================================================
CRoll2D *CRoll2D::Create
(
	const D3DXVECTOR3& rPos,	// 位置
	const D3DXVECTOR3& rSize,	// 大きさ
	const float fAddRot,		// 回転量
	const D3DXVECTOR3& rRot,	// 向き
	const D3DXCOLOR& rCol		// 色
)
{
	// 回転オブジェクト2Dの生成
	CRoll2D *pRoll2D = new CRoll2D;
	if (pRoll2D == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// 回転オブジェクト2Dの初期化
		if (FAILED(pRoll2D->Init()))
		{ // 初期化に失敗した場合

			// 回転オブジェクト2Dの破棄
			SAFE_DELETE(pRoll2D);
			return nullptr;
		}

		// 位置を設定
		pRoll2D->SetVec3Position(rPos);

		// 向きを設定
		pRoll2D->SetVec3Rotation(rRot);

		// 大きさを設定
		pRoll2D->SetVec3Sizing(rSize);

		// 色を設定
		pRoll2D->SetColor(rCol);

		// 向きの加算量を設定
		pRoll2D->SetAddRot(fAddRot);

		// 確保したアドレスを返す
		return pRoll2D;
	}
}
