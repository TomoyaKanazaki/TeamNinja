//============================================================
//
//	吹き出しマネージャー処理 [balloonManager.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "balloonManager.h"

//************************************************************
//	子クラス [CBalloonManager] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CBalloonManager::CBalloonManager()
{

}

//============================================================
//	デストラクタ
//============================================================
CBalloonManager::~CBalloonManager()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CBalloonManager::Init(void)
{
	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CBalloonManager::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CBalloonManager::Update(const float fDeltaTime)
{

}

//============================================================
//	描画処理
//============================================================
void CBalloonManager::Draw(CShader *pShader)
{

}

//============================================================
//	生成処理
//============================================================
CBalloonManager *CBalloonManager::Create(void)
{
	// 吹き出しマネージャーの生成
	CBalloonManager *pBalloonManager = new CBalloonManager;
	if (pBalloonManager == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// 吹き出しマネージャーの初期化
		if (FAILED(pBalloonManager->Init()))
		{ // 初期化に失敗した場合

			// 吹き出しマネージャーの破棄
			SAFE_DELETE(pBalloonManager);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pBalloonManager;
	}
}
