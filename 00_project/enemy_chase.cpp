////============================================================
////
////	追跡敵処理 [enemy_chase.cpp]
////	Author：小原立暉
////
////============================================================
////************************************************************
////	インクルードファイル
////************************************************************
//#include "manager.h"
//#include "enemy_chase.h"
//#include "renderer.h"
//
////************************************************************
////	定数宣言
////************************************************************
//namespace
//{
//	const char* TEXTURE_LIFEFRAME = "data\\TEXTURE\\lifeframe000.png";	// 体力フレーム表示のテクスチャファイル
//}
//
////************************************************************
////	子クラス [CEnemyChase] のメンバ関数
////************************************************************
////============================================================
////	コンストラクタ
////============================================================
//CEnemyChase::CEnemyChase(const EType type) : CEnemy(type)
//{
//
//}
//
////============================================================
////	デストラクタ
////============================================================
//CEnemyChase::~CEnemyChase()
//{
//
//}
//
////============================================================
////	初期化処理
////============================================================
//HRESULT CEnemyChase::Init(void)
//{
//	// メンバ変数を初期化
//	m_pLife = nullptr;	// 体力の情報
//
//	// 敵の初期化
//	if (FAILED(CEnemy::Init()))
//	{ // 初期化に失敗した場合
//
//		// 失敗を返す
//		assert(false);
//		return E_FAIL;
//	}
//
//	// 体力の生成
//	SStatusInfo status = GetStatusInfo();	// ステータス情報
//	float fPosUp = status.fHeight + lifeInfo::PLUS_HEIGHT_POSY;	// 表示Y位置の加算量
//	m_pLife = CGauge3D::Create
//	( // 引数
//		this,					// ゲージ表示オブジェクト
//		status.nMaxLife,		// 最大表示値
//		lifeInfo::CHANGE_FRAME,	// 表示値変動フレーム
//		fPosUp,					// 表示Y位置の加算量
//		lifeInfo::GAUGE_SIZE,	// ゲージ大きさ
//		lifeInfo::FRONT_COL,	// 表ゲージ色
//		lifeInfo::BACK_COL,		// 裏ゲージ色
//		true,					// 枠描画状況
//		TEXTURE_LIFEFRAME,		// フレームテクスチャパス
//		lifeInfo::FRAME_SIZE	// 枠大きさ
//	);
//
//	// 成功を返す
//	return S_OK;
//}
//
////============================================================
////	終了処理
////============================================================
//void CEnemyChase::Uninit(void)
//{
//	// 自身の終了を伝える
//	m_pLife->DeleteGauge();
//
//	// 敵の終了
//	CEnemy::Uninit();
//}
//
////============================================================
////	更新処理
////============================================================
//void CEnemyChase::Update(void)
//{
//	// 敵の更新
//	CEnemy::Update();
//}
//
////============================================================
////	描画処理
////============================================================
//void CEnemyChase::Draw(CShader* pShader)
//{
//	// 敵の描画
//	CEnemy::Draw(pShader);
//}
